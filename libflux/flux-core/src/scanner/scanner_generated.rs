#![allow(clippy::never_loop, clippy::double_parens, clippy::duplicate_underscore_argument, clippy::single_match, clippy::comparison_chain, clippy::too_many_arguments, clippy::assign_op_pattern, clippy::needless_return)]
use std::vec::Vec;

use crate::scanner::*;

static _flux_actions: [i8 ; 209] = [ 0, 1, 0, 1, 1, 1, 3, 1, 4, 1, 7, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 37, 1, 38, 1, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 1, 46, 1, 47, 1, 48, 1, 49, 1, 50, 1, 51, 1, 52, 1, 53, 1, 54, 1, 55, 1, 56, 1, 57, 1, 58, 1, 59, 1, 60, 1, 61, 1, 63, 1, 64, 1, 65, 1, 66, 1, 67, 1, 68, 1, 69, 1, 70, 1, 71, 1, 72, 1, 73, 1, 74, 1, 75, 1, 76, 1, 77, 1, 78, 1, 79, 1, 80, 1, 82, 1, 83, 1, 84, 1, 85, 1, 86, 2, 0, 8, 2, 0, 36, 2, 0, 62, 2, 1, 2, 2, 4, 5, 2, 4, 6, 2, 4, 15, 2, 4, 16, 2, 4, 17, 2, 4, 18, 2, 4, 19, 2, 4, 20, 2, 4, 21, 2, 4, 22, 2, 4, 23, 2, 4, 24, 2, 4, 25, 2, 4, 26, 2, 4, 27, 2, 4, 28, 2, 4, 29, 2, 4, 30, 2, 4, 31, 2, 4, 32, 2, 4, 33, 2, 4, 34, 2, 4, 35, 2, 4, 81, 3, 4, 0, 81, 0 , 0 ];
static _flux_key_offsets: [i16 ; 315] = [ 0, 0, 2, 6, 9, 16, 17, 23, 29, 30, 33, 36, 40, 42, 44, 45, 47, 49, 51, 53, 54, 56, 58, 59, 61, 63, 65, 67, 68, 70, 72, 75, 84, 95, 96, 97, 100, 106, 106, 108, 110, 119, 126, 134, 135, 137, 139, 143, 148, 157, 161, 167, 178, 180, 182, 184, 189, 216, 220, 230, 245, 259, 277, 290, 306, 314, 330, 343, 364, 372, 386, 395, 409, 420, 432, 442, 451, 460, 462, 465, 486, 492, 493, 499, 507, 556, 561, 567, 571, 576, 578, 580, 582, 589, 597, 604, 607, 611, 615, 617, 619, 623, 627, 631, 637, 645, 649, 655, 657, 659, 661, 667, 671, 675, 677, 679, 683, 686, 690, 692, 696, 700, 710, 715, 729, 745, 747, 749, 765, 770, 772, 774, 776, 780, 784, 786, 790, 794, 804, 814, 815, 826, 834, 837, 840, 844, 848, 850, 853, 855, 855, 858, 860, 885, 887, 893, 898, 900, 904, 908, 910, 915, 917, 921, 923, 925, 927, 930, 932, 953, 955, 957, 959, 970, 976, 978, 980, 982, 984, 988, 992, 994, 996, 1000, 1002, 1010, 1018, 1035, 1045, 1049, 1051, 1053, 1057, 1059, 1063, 1065, 1069, 1074, 1076, 1085, 1089, 1099, 1105, 1107, 1109, 1123, 1124, 1134, 1135, 1143, 1150, 1152, 1155, 1157, 1159, 1161, 1164, 1167, 1170, 1172, 1176, 1177, 1180, 1183, 1187, 1190, 1193, 1202, 1211, 1214, 1216, 1223, 1224, 1230, 1236, 1238, 1318, 1322, 1326, 1327, 1329, 1330, 1331, 1343, 1344, 1348, 1353, 1356, 1361, 1373, 1385, 1397, 1410, 1422, 1424, 1427, 1428, 1471, 1515, 1559, 1603, 1647, 1691, 1735, 1779, 1823, 1869, 1913, 1957, 2001, 2045, 2089, 2133, 2177, 2221, 2265, 2311, 2355, 2399, 2443, 2487, 2531, 2575, 2620, 2664, 2708, 2752, 2796, 2840, 2884, 2928, 2972, 3016, 3060, 3104, 3148, 3192, 3236, 3280, 3325, 3369, 3413, 3457, 3501, 3545, 3589, 3633, 3677, 3682, 3686, 3689, 3692, 3696, 0 , 0 ];
static _flux_trans_keys: [u8 ; 3702] = [ 61, 126, 10, 34, 36, 92, 10, 34, 123, 34, 36, 92, 110, 114, 116, 120, 123, 48, 57, 65, 70, 97, 102, 48, 57, 65, 70, 97, 102, 33, 46, 48, 57, 46, 48, 57, 45, 46, 48, 57, 48, 57, 48, 57, 45, 48, 57, 48, 57, 48, 57, 48, 57, 58, 48, 57, 48, 57, 58, 48, 57, 48, 57, 48, 57, 48, 57, 58, 48, 57, 48, 57, 46, 48, 57, 100, 104, 109, 110, 115, 117, 119, 121, 194, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 115, 181, 170, 181, 186, 128, 150, 152, 182, 184, 255, 192, 255, 128, 255, 173, 130, 133, 146, 159, 165, 171, 175, 255, 133, 176, 180, 182, 183, 186, 189, 134, 140, 136, 138, 142, 161, 163, 255, 182, 130, 137, 164, 176, 151, 152, 154, 160, 190, 136, 175, 192, 255, 135, 129, 130, 132, 133, 144, 170, 176, 178, 144, 154, 161, 191, 128, 151, 153, 158, 174, 255, 148, 157, 160, 169, 172, 176, 185, 189, 190, 192, 255, 144, 191, 141, 255, 178, 255, 186, 138, 170, 180, 181, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 129, 185, 189, 255, 141, 143, 145, 151, 164, 176, 179, 186, 192, 255, 178, 129, 131, 133, 140, 143, 144, 147, 168, 170, 176, 182, 185, 189, 255, 141, 158, 133, 134, 137, 138, 143, 150, 152, 155, 164, 175, 178, 255, 129, 131, 133, 138, 143, 144, 147, 168, 170, 176, 178, 179, 181, 182, 184, 185, 190, 255, 157, 131, 134, 137, 138, 141, 144, 146, 152, 159, 175, 182, 255, 129, 131, 133, 141, 143, 145, 147, 168, 170, 176, 178, 179, 181, 185, 189, 255, 134, 138, 141, 143, 145, 159, 164, 255, 129, 131, 133, 140, 143, 144, 147, 168, 170, 176, 178, 179, 181, 185, 189, 191, 177, 128, 132, 135, 136, 139, 140, 150, 151, 156, 157, 159, 163, 156, 130, 131, 133, 138, 142, 144, 146, 149, 153, 154, 158, 159, 163, 164, 168, 170, 174, 185, 190, 191, 144, 151, 128, 130, 134, 136, 138, 140, 129, 131, 133, 140, 142, 144, 146, 168, 170, 179, 181, 185, 189, 255, 133, 137, 151, 141, 148, 154, 159, 164, 255, 130, 131, 133, 140, 142, 144, 146, 168, 170, 179, 181, 185, 189, 191, 158, 128, 132, 134, 136, 138, 140, 149, 150, 160, 163, 130, 131, 133, 140, 142, 144, 146, 168, 170, 185, 189, 255, 133, 137, 141, 150, 152, 159, 164, 185, 192, 255, 189, 130, 131, 133, 150, 154, 177, 179, 187, 150, 128, 134, 143, 148, 152, 159, 178, 179, 129, 186, 141, 128, 134, 132, 138, 141, 165, 167, 129, 130, 135, 136, 148, 151, 153, 159, 161, 163, 170, 171, 173, 185, 187, 189, 134, 141, 128, 132, 156, 157, 128, 128, 135, 137, 172, 177, 191, 128, 129, 136, 139, 144, 151, 153, 188, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 172, 173, 174, 176, 177, 180, 181, 182, 184, 188, 189, 190, 191, 132, 136, 145, 152, 185, 187, 184, 128, 182, 187, 191, 144, 162, 165, 168, 174, 255, 135, 141, 143, 159, 187, 134, 143, 189, 255, 154, 158, 163, 167, 186, 255, 137, 151, 153, 142, 143, 158, 159, 137, 177, 142, 143, 182, 183, 191, 255, 128, 130, 133, 136, 150, 152, 255, 145, 150, 151, 155, 158, 160, 255, 128, 143, 160, 255, 181, 255, 129, 255, 173, 174, 183, 255, 129, 154, 160, 255, 171, 173, 177, 255, 128, 140, 142, 147, 160, 179, 128, 147, 160, 172, 174, 176, 178, 179, 128, 179, 182, 255, 137, 150, 152, 155, 157, 255, 160, 255, 184, 255, 128, 170, 128, 156, 160, 171, 176, 184, 144, 173, 176, 180, 128, 169, 176, 255, 138, 255, 128, 155, 128, 179, 181, 255, 132, 140, 255, 128, 169, 174, 175, 128, 181, 141, 143, 154, 189, 150, 151, 158, 159, 152, 154, 156, 158, 134, 135, 142, 143, 190, 255, 190, 128, 180, 182, 188, 130, 132, 134, 140, 144, 147, 150, 155, 160, 172, 178, 180, 182, 188, 129, 130, 132, 133, 134, 146, 147, 176, 177, 178, 179, 180, 181, 182, 183, 184, 177, 191, 144, 148, 130, 135, 149, 164, 166, 168, 138, 147, 153, 157, 170, 173, 175, 185, 188, 191, 142, 133, 137, 160, 255, 137, 255, 182, 255, 170, 255, 128, 174, 176, 255, 159, 176, 190, 255, 165, 255, 128, 165, 176, 255, 166, 174, 176, 255, 128, 150, 160, 166, 168, 174, 176, 182, 184, 190, 128, 134, 136, 142, 144, 150, 152, 158, 160, 191, 175, 128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 255, 133, 135, 161, 169, 177, 181, 184, 188, 160, 151, 156, 187, 192, 255, 133, 173, 177, 255, 143, 159, 184, 255, 176, 191, 182, 183, 184, 182, 255, 191, 192, 255, 132, 255, 128, 146, 148, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 176, 129, 145, 149, 151, 177, 255, 141, 255, 141, 143, 160, 169, 172, 255, 191, 128, 159, 162, 174, 128, 151, 151, 159, 162, 255, 137, 138, 141, 255, 187, 255, 130, 134, 139, 168, 255, 128, 179, 138, 170, 176, 255, 147, 255, 128, 182, 128, 141, 158, 159, 255, 164, 255, 164, 168, 169, 171, 172, 173, 174, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 165, 179, 174, 175, 171, 175, 154, 255, 190, 128, 134, 147, 151, 157, 168, 170, 182, 184, 188, 128, 129, 131, 132, 134, 255, 147, 255, 190, 255, 144, 255, 144, 145, 136, 175, 188, 255, 176, 180, 182, 255, 189, 255, 161, 186, 129, 154, 166, 255, 191, 255, 130, 135, 138, 143, 146, 151, 154, 156, 144, 146, 157, 160, 170, 175, 161, 169, 128, 129, 130, 131, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 160, 164, 168, 128, 139, 141, 166, 168, 186, 188, 189, 191, 255, 142, 143, 158, 255, 187, 255, 128, 180, 128, 156, 160, 255, 145, 255, 128, 158, 176, 255, 139, 255, 128, 157, 160, 255, 144, 132, 135, 150, 255, 158, 255, 136, 188, 191, 128, 133, 138, 181, 183, 184, 128, 149, 160, 185, 128, 131, 133, 134, 140, 147, 149, 151, 153, 179, 128, 141, 144, 145, 129, 140, 175, 255, 163, 255, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 150, 153, 149, 157, 173, 186, 188, 160, 161, 163, 164, 167, 168, 132, 134, 149, 157, 186, 139, 140, 191, 255, 134, 128, 132, 138, 144, 146, 255, 166, 167, 129, 155, 187, 149, 181, 143, 175, 137, 169, 131, 140, 255, 128, 129, 255, 155, 156, 255, 151, 255, 160, 168, 161, 167, 62, 10, 47, 92, 10, 47, 92, 10, 47, 92, 120, 10, 47, 92, 10, 47, 92, 10, 47, 92, 48, 57, 65, 70, 97, 102, 10, 47, 92, 48, 57, 65, 70, 97, 102, 10, 47, 92, 10, 123, 34, 36, 92, 110, 114, 116, 120, 123, 48, 57, 65, 70, 97, 102, 48, 57, 65, 70, 97, 102, 10, 123, 10, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 61, 62, 63, 91, 93, 94, 95, 97, 98, 101, 105, 110, 111, 112, 114, 116, 123, 124, 125, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 9, 13, 49, 57, 65, 90, 99, 122, 196, 202, 208, 218, 229, 236, 9, 32, 11, 13, 10, 34, 36, 92, 10, 48, 57, 47, 10, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 84, 43, 45, 46, 90, 43, 45, 90, 48, 57, 48, 49, 57, 48, 111, 115, 49, 57, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 45, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 46, 100, 104, 109, 110, 115, 117, 119, 121, 194, 48, 57, 45, 61, 61, 62, 126, 61, 95, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 100, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 117, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 105, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 108, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 105, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 108, 109, 120, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 115, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 112, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 121, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 105, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 115, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 115, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 102, 109, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 112, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 111, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 114, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 111, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 112, 114, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 105, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 111, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 97, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 98, 122, 196, 202, 208, 218, 229, 236, 95, 99, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 107, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 97, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 98, 122, 196, 202, 208, 218, 229, 236, 95, 103, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 117, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 114, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 104, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 115, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 116, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 99, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 97, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 98, 122, 196, 202, 208, 218, 229, 236, 95, 115, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 101, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 95, 110, 194, 195, 198, 199, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 239, 240, 48, 57, 65, 90, 97, 122, 196, 202, 208, 218, 229, 236, 10, 32, 47, 9, 13, 9, 32, 11, 13, 10, 47, 92, 10, 47, 92, 10, 34, 36, 92, 10, 34, 36, 92, 0, 0 ];
static _flux_single_lengths: [i8 ; 315] = [ 0, 2, 4, 3, 7, 1, 0, 0, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 9, 9, 1, 1, 3, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 27, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 1, 2, 0, 3, 0, 1, 0, 2, 1, 1, 0, 1, 5, 2, 1, 0, 0, 43, 1, 0, 0, 1, 0, 0, 0, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 1, 0, 16, 2, 0, 6, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 9, 0, 1, 1, 0, 0, 0, 3, 0, 0, 1, 0, 19, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 19, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 4, 0, 0, 12, 1, 4, 1, 4, 1, 0, 3, 2, 2, 2, 1, 1, 1, 0, 2, 1, 3, 3, 4, 3, 3, 3, 3, 3, 2, 7, 1, 0, 0, 2, 66, 2, 4, 1, 0, 1, 1, 10, 1, 4, 3, 1, 3, 10, 10, 10, 11, 10, 2, 3, 1, 31, 32, 32, 32, 32, 32, 32, 32, 32, 34, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 3, 2, 3, 3, 4, 4, 0 , 0 ];
static _flux_range_lengths: [i8 ; 315] = [ 0, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 4, 3, 3, 0, 1, 1, 2, 2, 4, 2, 3, 5, 1, 1, 1, 2, 0, 2, 5, 7, 6, 9, 6, 8, 3, 8, 6, 10, 3, 7, 3, 7, 5, 6, 4, 4, 4, 1, 1, 8, 2, 0, 3, 4, 3, 2, 3, 2, 2, 1, 1, 1, 2, 3, 3, 1, 2, 2, 1, 1, 2, 2, 2, 3, 4, 2, 3, 1, 1, 1, 3, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 3, 2, 7, 0, 0, 1, 5, 2, 1, 1, 1, 2, 1, 1, 2, 2, 5, 5, 0, 1, 4, 1, 1, 2, 2, 1, 0, 1, 0, 1, 1, 3, 1, 3, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 3, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 4, 1, 0, 5, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 3, 2, 5, 1, 1, 1, 1, 0, 3, 0, 2, 3, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 3, 3, 0, 7, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 0, 0, 0, 0, 0 , 0 ];
static _flux_index_offsets: [i16 ; 315] = [ 0, 0, 3, 8, 12, 20, 22, 26, 30, 32, 35, 38, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 81, 91, 102, 104, 106, 110, 114, 115, 117, 119, 125, 130, 136, 138, 140, 142, 145, 149, 155, 158, 162, 169, 171, 173, 175, 179, 207, 210, 216, 225, 234, 244, 252, 261, 267, 276, 284, 296, 302, 310, 317, 325, 332, 339, 346, 352, 358, 360, 363, 377, 382, 384, 388, 393, 440, 444, 448, 451, 455, 457, 459, 461, 467, 473, 478, 481, 484, 487, 489, 491, 494, 497, 500, 504, 509, 512, 516, 518, 520, 522, 526, 529, 532, 534, 536, 539, 542, 545, 547, 550, 553, 561, 565, 573, 590, 593, 595, 607, 611, 613, 615, 617, 620, 624, 626, 629, 632, 638, 644, 646, 657, 662, 665, 668, 671, 674, 676, 680, 682, 683, 686, 688, 711, 713, 717, 721, 723, 726, 729, 731, 736, 738, 741, 743, 745, 747, 750, 752, 773, 775, 777, 779, 786, 790, 792, 794, 796, 798, 801, 804, 806, 808, 811, 813, 818, 826, 844, 850, 853, 855, 857, 860, 862, 865, 867, 870, 874, 876, 883, 886, 892, 898, 900, 902, 916, 918, 926, 928, 935, 940, 942, 946, 949, 952, 955, 958, 961, 964, 966, 970, 972, 976, 980, 985, 989, 993, 1000, 1007, 1011, 1014, 1022, 1024, 1028, 1032, 1035, 1109, 1113, 1118, 1120, 1122, 1124, 1126, 1138, 1140, 1145, 1150, 1153, 1158, 1170, 1182, 1194, 1207, 1219, 1222, 1226, 1228, 1266, 1305, 1344, 1383, 1422, 1461, 1500, 1539, 1578, 1619, 1658, 1697, 1736, 1775, 1814, 1853, 1892, 1931, 1970, 2011, 2050, 2089, 2128, 2167, 2206, 2245, 2285, 2324, 2363, 2402, 2441, 2480, 2519, 2558, 2597, 2636, 2675, 2714, 2753, 2792, 2831, 2870, 2910, 2949, 2988, 3027, 3066, 3105, 3144, 3183, 3222, 3227, 3231, 3235, 3239, 3244, 0 , 0 ];
static _flux_cond_targs: [i16 ; 3564] = [ 235, 235, 0, 2, 235, 3, 4, 2, 2, 235, 235, 2, 2, 5, 2, 2, 2, 2, 6, 235, 2, 235, 7, 7, 7, 235, 2, 2, 2, 235, 238, 0, 239, 10, 235, 239, 11, 235, 12, 239, 30, 235, 13, 235, 14, 235, 15, 235, 16, 235, 243, 235, 18, 235, 19, 235, 20, 235, 21, 235, 22, 235, 23, 235, 24, 235, 244, 235, 26, 235, 27, 235, 28, 235, 29, 235, 235, 235, 239, 30, 235, 246, 246, 247, 33, 246, 33, 246, 246, 34, 235, 246, 246, 247, 33, 246, 33, 246, 246, 34, 32, 235, 246, 235, 33, 235, 256, 256, 256, 235, 256, 256, 256, 235, 256, 235, 256, 256, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 235, 235, 256, 235, 256, 235, 256, 235, 235, 256, 235, 235, 235, 256, 256, 256, 256, 256, 256, 235, 256, 256, 235, 256, 256, 256, 235, 235, 235, 235, 235, 235, 235, 256, 256, 235, 256, 235, 235, 256, 256, 256, 256, 235, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 235, 256, 256, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 235, 235, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 235, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 256, 235, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 235, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 235, 256, 235, 256, 256, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 235, 256, 235, 256, 256, 256, 235, 256, 256, 256, 256, 235, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 39, 37, 38, 39, 120, 121, 122, 123, 39, 37, 37, 235, 256, 256, 256, 235, 256, 256, 256, 235, 235, 235, 256, 235, 235, 235, 256, 235, 256, 235, 256, 235, 256, 235, 235, 235, 235, 235, 256, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 235, 235, 235, 256, 235, 235, 256, 256, 256, 235, 235, 256, 256, 235, 235, 235, 256, 256, 256, 235, 235, 235, 256, 256, 256, 256, 235, 256, 256, 256, 256, 235, 256, 256, 235, 235, 235, 235, 256, 256, 235, 235, 256, 256, 235, 256, 256, 256, 235, 256, 256, 235, 256, 256, 235, 235, 256, 256, 235, 256, 256, 235, 235, 235, 256, 256, 256, 235, 256, 235, 256, 256, 235, 235, 235, 256, 235, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 256, 256, 235, 125, 126, 127, 128, 129, 130, 131, 132, 133, 39, 134, 135, 136, 137, 138, 139, 235, 256, 256, 235, 256, 235, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 235, 235, 256, 256, 235, 235, 256, 256, 256, 235, 235, 235, 235, 256, 235, 256, 256, 256, 235, 235, 235, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 256, 256, 235, 256, 235, 141, 99, 142, 143, 144, 37, 145, 146, 39, 37, 235, 256, 256, 256, 256, 235, 235, 235, 256, 235, 235, 256, 256, 256, 235, 235, 235, 256, 256, 235, 148, 235, 39, 37, 235, 256, 37, 151, 235, 37, 235, 256, 39, 153, 39, 154, 155, 156, 157, 37, 158, 159, 160, 161, 39, 151, 162, 163, 164, 165, 39, 37, 37, 37, 235, 235, 256, 235, 235, 235, 256, 256, 256, 256, 235, 256, 235, 256, 256, 235, 235, 235, 256, 256, 235, 235, 235, 235, 235, 256, 256, 235, 256, 256, 235, 235, 256, 256, 235, 256, 235, 167, 235, 37, 235, 256, 39, 169, 170, 171, 172, 173, 54, 174, 175, 176, 177, 178, 179, 37, 180, 181, 182, 183, 184, 37, 235, 235, 256, 235, 256, 235, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 256, 235, 256, 235, 235, 256, 256, 235, 235, 256, 235, 235, 256, 256, 256, 235, 235, 256, 256, 235, 256, 256, 235, 235, 256, 256, 256, 256, 256, 235, 186, 201, 204, 216, 217, 219, 149, 235, 187, 188, 39, 189, 190, 191, 192, 193, 194, 195, 196, 39, 37, 197, 198, 199, 200, 235, 256, 256, 256, 256, 256, 235, 235, 235, 256, 235, 256, 256, 235, 256, 256, 235, 235, 256, 256, 256, 235, 235, 256, 256, 256, 235, 235, 235, 235, 256, 235, 256, 256, 256, 256, 256, 256, 256, 235, 256, 256, 235, 256, 256, 256, 256, 256, 235, 39, 202, 39, 203, 37, 235, 235, 256, 235, 256, 39, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 37, 235, 235, 256, 235, 235, 235, 235, 235, 235, 235, 256, 235, 256, 235, 235, 235, 235, 235, 235, 256, 256, 256, 256, 256, 235, 235, 256, 235, 235, 235, 256, 235, 235, 256, 235, 235, 256, 235, 235, 256, 235, 235, 256, 39, 37, 235, 218, 235, 37, 235, 256, 39, 197, 37, 235, 235, 0, 221, 307, 222, 221, 221, 310, 222, 221, 221, 310, 224, 226, 221, 221, 310, 225, 221, 221, 310, 222, 221, 221, 307, 222, 227, 227, 227, 221, 221, 307, 222, 228, 228, 228, 221, 221, 307, 222, 221, 312, 311, 312, 312, 231, 312, 312, 312, 312, 232, 311, 312, 311, 233, 233, 233, 311, 312, 312, 312, 311, 312, 311, 312, 235, 236, 1, 237, 8, 235, 235, 235, 235, 235, 235, 235, 239, 240, 242, 235, 253, 254, 255, 235, 235, 235, 235, 256, 257, 259, 265, 275, 280, 282, 287, 293, 298, 235, 220, 235, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 236, 248, 256, 256, 37, 37, 149, 0, 236, 236, 236, 235, 2, 235, 3, 4, 2, 235, 238, 239, 235, 241, 235, 235, 241, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 9, 235, 17, 235, 25, 25, 245, 235, 235, 25, 25, 235, 245, 235, 31, 32, 235, 31, 246, 246, 32, 235, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 249, 235, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 250, 235, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 251, 235, 12, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 252, 235, 239, 246, 246, 247, 33, 246, 33, 246, 246, 34, 252, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 258, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 260, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 261, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 262, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 263, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 264, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 266, 268, 271, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 267, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 269, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 270, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 272, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 273, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 274, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 276, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 277, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 278, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 279, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 281, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 283, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 284, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 285, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 286, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 288, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 289, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 290, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 291, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 292, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 294, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 295, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 296, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 297, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 299, 305, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 300, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 301, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 302, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 303, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 304, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 306, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 256, 256, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 124, 140, 147, 150, 152, 166, 168, 185, 256, 256, 256, 37, 37, 149, 235, 307, 308, 309, 308, 307, 308, 308, 308, 307, 221, 307, 223, 221, 221, 307, 222, 221, 312, 311, 234, 230, 312, 312, 311, 229, 230, 312, 0, 1, 235, 235, 235, 235, 235, 235, 8, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 220, 307, 307, 307, 307, 307, 307, 307, 307, 311, 311, 311, 311, 311, 234, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 307, 307, 307, 307, 311, 311, 0 , 0 ];
static _flux_cond_actions: [i16 ; 3564] = [ 43, 47, 0, 1, 25, 0, 0, 0, 1, 25, 105, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 105, 0, 0, 0, 105, 0, 0, 0, 105, 0, 0, 191, 0, 99, 191, 0, 99, 0, 191, 0, 99, 0, 99, 0, 99, 0, 99, 0, 99, 7, 99, 0, 103, 0, 103, 0, 103, 0, 103, 0, 103, 0, 103, 0, 103, 7, 103, 0, 103, 0, 103, 0, 103, 0, 103, 23, 103, 191, 0, 99, 194, 194, 194, 0, 194, 0, 194, 194, 0, 101, 194, 194, 194, 0, 194, 0, 194, 194, 0, 0, 101, 194, 107, 0, 107, 185, 185, 185, 107, 185, 185, 185, 107, 185, 107, 185, 185, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 107, 107, 185, 107, 185, 107, 185, 107, 107, 185, 107, 107, 107, 185, 185, 185, 185, 185, 185, 107, 185, 185, 107, 185, 185, 185, 107, 107, 107, 107, 107, 107, 107, 185, 185, 107, 185, 107, 107, 185, 185, 185, 185, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 185, 185, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 107, 107, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 107, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 185, 107, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 107, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 107, 185, 107, 185, 185, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 107, 185, 107, 185, 185, 185, 107, 185, 185, 185, 185, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 185, 185, 185, 107, 185, 185, 185, 107, 107, 107, 185, 107, 107, 107, 185, 107, 185, 107, 185, 107, 185, 107, 107, 107, 107, 107, 185, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 107, 107, 107, 185, 107, 107, 185, 185, 185, 107, 107, 185, 185, 107, 107, 107, 185, 185, 185, 107, 107, 107, 185, 185, 185, 185, 107, 185, 185, 185, 185, 107, 185, 185, 107, 107, 107, 107, 185, 185, 107, 107, 185, 185, 107, 185, 185, 185, 107, 185, 185, 107, 185, 185, 107, 107, 185, 185, 107, 185, 185, 107, 107, 107, 185, 185, 185, 107, 185, 107, 185, 185, 107, 107, 107, 185, 107, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 185, 185, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 185, 185, 107, 185, 107, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 107, 107, 185, 185, 107, 107, 185, 185, 185, 107, 107, 107, 107, 185, 107, 185, 185, 185, 107, 107, 107, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 185, 185, 107, 185, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 185, 185, 185, 185, 107, 107, 107, 185, 107, 107, 185, 185, 185, 107, 107, 107, 185, 185, 107, 0, 107, 0, 0, 107, 185, 0, 0, 107, 0, 107, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 107, 185, 107, 107, 107, 185, 185, 185, 185, 107, 185, 107, 185, 185, 107, 107, 107, 185, 185, 107, 107, 107, 107, 107, 185, 185, 107, 185, 185, 107, 107, 185, 185, 107, 185, 107, 0, 107, 0, 107, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 107, 185, 107, 185, 107, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 185, 107, 185, 107, 107, 185, 185, 107, 107, 185, 107, 107, 185, 185, 185, 107, 107, 185, 185, 107, 185, 185, 107, 107, 185, 185, 185, 185, 185, 107, 0, 0, 0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 185, 185, 185, 185, 185, 107, 107, 107, 185, 107, 185, 185, 107, 185, 185, 107, 107, 185, 185, 185, 107, 107, 185, 185, 185, 107, 107, 107, 107, 185, 107, 185, 185, 185, 185, 185, 185, 185, 107, 185, 185, 107, 185, 185, 185, 185, 185, 107, 0, 0, 0, 0, 0, 107, 107, 185, 107, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 107, 185, 107, 107, 107, 107, 107, 107, 107, 185, 107, 185, 107, 107, 107, 107, 107, 107, 185, 185, 185, 185, 185, 107, 107, 185, 107, 107, 107, 185, 107, 107, 185, 107, 107, 185, 107, 107, 185, 107, 107, 185, 0, 0, 107, 0, 107, 0, 107, 185, 0, 0, 0, 107, 67, 0, 1, 9, 0, 0, 1, 131, 0, 0, 1, 131, 0, 0, 0, 1, 131, 0, 0, 1, 131, 0, 0, 1, 9, 0, 0, 0, 0, 0, 1, 9, 0, 0, 0, 0, 0, 1, 9, 0, 0, 203, 115, 200, 200, 0, 200, 200, 200, 200, 0, 117, 200, 117, 0, 0, 0, 117, 200, 200, 200, 117, 203, 109, 200, 125, 0, 0, 7, 0, 33, 53, 55, 31, 27, 69, 29, 197, 0, 188, 65, 0, 0, 0, 71, 57, 59, 35, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 61, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 185, 185, 0, 0, 0, 0, 0, 0, 0, 97, 1, 25, 0, 0, 0, 73, 0, 191, 107, 0, 87, 122, 0, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 0, 81, 0, 85, 0, 0, 7, 23, 85, 0, 0, 23, 7, 85, 0, 0, 83, 0, 194, 194, 0, 83, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 188, 81, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 188, 81, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 188, 81, 0, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 188, 81, 191, 194, 194, 194, 0, 194, 0, 194, 194, 0, 188, 81, 51, 39, 89, 37, 49, 45, 93, 41, 91, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 107, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 173, 185, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 77, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 185, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 185, 185, 0, 0, 0, 79, 119, 0, 134, 0, 11, 0, 0, 0, 15, 1, 17, 0, 0, 1, 9, 0, 0, 203, 111, 0, 0, 200, 203, 113, 0, 0, 200, 0, 0, 105, 105, 105, 105, 105, 105, 0, 99, 99, 99, 99, 99, 99, 99, 99, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 99, 101, 101, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 0, 21, 21, 19, 19, 19, 19, 19, 19, 115, 117, 117, 117, 117, 0, 0, 97, 95, 73, 107, 87, 75, 81, 85, 85, 85, 83, 83, 81, 81, 81, 81, 81, 89, 93, 91, 107, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 77, 79, 79, 79, 79, 79, 0, 15, 17, 13, 0, 113, 0 , 0 ];
static _flux_to_state_actions: [i16 ; 315] = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 128, 0, 0 , 0 ];
static _flux_from_state_actions: [i8 ; 315] = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0 , 0 ];
static _flux_eof_trans: [i16 ; 315] = [ 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 0 , 0 ];
static flux_start : i32 = 235;
static flux_error : i32 = 0;
static flux_en_main_with_regex : i32 = 307;
static flux_en_main : i32 = 235;
static flux_en_string_expr : i32 = 311;
pub fn scan(
data: &[u8],
mode: i32,
pp: &mut i32,
_data: i32,
pe: i32,
eof: i32,
last_newline: &mut i32,
cur_line: &mut i32,
token: &mut TokenType,
token_start: &mut i32,
token_start_line: &mut i32,
token_start_col: &mut i32,
token_end: &mut i32,
token_end_line: &mut i32,
token_end_col: &mut i32 ) -> u32
{
	let mut cs = flux_start;
	match mode {
		0 => { cs = flux_en_main },
		1 => { cs = flux_en_main_with_regex },
		2 => { cs = flux_en_string_expr },
		_ => {},
	}
	let mut p: i32 = *pp;
	
	let mut act: i32 = 0;
	let mut ts: i32 = 0;
	let mut te: i32 = 0;
	let mut tok: TokenType = TokenType::Illegal;
	
	let mut last_newline_before_token: i32 = *last_newline;
	let mut cur_line_token_start: i32 = *cur_line;
	
	// alskdfj
	
	{
		ts = 0;
		te = 0;
		act = 0;
	}
	
	{
		let mut _klen = 0;
		let mut _trans  = 0;
		let mut _keys :i32= 0;
		let mut _acts :i32= 0;
		let mut _nacts = 0;
		let mut __have = 0;
		'_resume: while ( p != pe || p == eof  ) {
			'_again: while ( true  ) {
				_acts = ( _flux_from_state_actions[(cs) as usize] ) as i32;
				_nacts = ( _flux_actions[(_acts ) as usize]
				) as u32;
				_acts += 1;
				while ( _nacts > 0  ) {
					match ( _flux_actions[(_acts ) as usize]
					) {
						3  => {
							{{ts = p;
								}}
							
						}
						
						_ => {}
					}
					_nacts -= 1;
					_acts += 1;
					
				}
				if ( p == eof  ) {
					{
						if ( _flux_eof_trans[(cs) as usize]> 0  ) {
							{
								_trans = ( _flux_eof_trans[(cs) as usize] ) as u32- 1;
							}
							
						}
					}
					
				}
				else {
					{
						_keys = ( _flux_key_offsets[(cs) as usize] ) as i32;
						_trans = ( _flux_index_offsets[(cs) as usize] ) as u32;
						_klen = ( _flux_single_lengths[(cs) as usize] ) as i32;
						__have = 0;
						if ( _klen > 0  ) {
							{
								let mut _lower  :i32= _keys;
								let mut _upper  :i32= _keys + _klen - 1;
								let mut _mid :i32= 0;
								while ( true  ) {
									if ( _upper < _lower  ) {
										{
											_keys += _klen;
											_trans += ( _klen ) as u32;
											break;
										}
										
										
									}
									_mid = _lower + ((_upper-_lower) >> 1);
									if ( ( data[(p ) as usize]
									) < _flux_trans_keys[(_mid ) as usize]
									) {
										_upper = _mid - 1;
										
									}
									else if ( ( data[(p ) as usize]
									) > _flux_trans_keys[(_mid ) as usize]
									) {
										_lower = _mid + 1;
										
									}
									else {
										{
											__have = 1;
											_trans += ( (_mid - _keys) ) as u32;
											break;
										}
										
									}
									
								}
							}
							
							
						}
						_klen = ( _flux_range_lengths[(cs) as usize] ) as i32;
						if ( __have == 0 && _klen > 0  ) {
							{
								let mut _lower  :i32= _keys;
								let mut _upper  :i32= _keys + (_klen<<1) - 2;
								let mut _mid :i32= 0;
								while ( true  ) {
									if ( _upper < _lower  ) {
										{
											_trans += ( _klen ) as u32;
											break;
										}
										
										
									}
									_mid = _lower + (((_upper-_lower) >> 1) & !1
									);
									if ( ( data[(p ) as usize]
									) < _flux_trans_keys[(_mid ) as usize]
									) {
										_upper = _mid - 2;
										
									}
									else if ( ( data[(p ) as usize]
									) > _flux_trans_keys[(_mid + 1 ) as usize]
									) {
										_lower = _mid + 2;
										
									}
									else {
										{
											_trans += ( ((_mid - _keys)>>1) ) as u32;
											break;
										}
										
									}
									
								}
							}
							
							
						}
					}
					
				}
				cs = ( _flux_cond_targs[(_trans) as usize] ) as i32;
				if ( _flux_cond_actions[(_trans) as usize]!= 0  ) {
					{
					
						_acts = ( _flux_cond_actions[(_trans) as usize] ) as i32;
						_nacts = ( _flux_actions[(_acts ) as usize]
						) as u32;
						_acts += 1;
						while ( _nacts > 0  ) {
							match ( _flux_actions[(_acts ) as usize]
							) {
								0  => {
									{*cur_line += 1;
										*last_newline = p + 1;
									}
									
								}
								4  => {
									{{te = p+1;
										}}
									
								}
								5  => {
									{{act = 1;
										}}
									
								}
								6  => {
									{{act = 4;
										}}
									
								}
								7  => {
									{{te = p+1;
											{tok = TokenType::Regex; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								8  => {
									{{te = p+1;
											{last_newline_before_token = *last_newline;
												cur_line_token_start = *cur_line;
											}
										}}
									
								}
								9  => {
									{{te = p+1;
											{{p = p - 1;
												} {cs = 235;
													if ( true  ) {
														break '_again;
														
													}
												}}
										}}
									
								}
								10  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Regex; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								11  => {
									{{te = p;
											p = p - 1;
										}}
									
								}
								12  => {
									{{te = p;
											p = p - 1;
											{{p = p - 1;
												} {cs = 235;
													if ( true  ) {
														break '_again;
														
													}
												}}
										}}
									
								}
								13  => {
									{{p = ((te))-1;
											{{p = p - 1;
												} {cs = 235;
													if ( true  ) {
														break '_again;
														
													}
												}}
										}}
									
								}
								14  => {
									{{match ( act  ) {
												1  => {
													p = ((te))-1;
													{tok = TokenType::Regex; {p += 1;
															break '_resume;
														} }
													
												}
												4  => {
													p = ((te))-1;
													{{p = p - 1;
														} {cs = 235;
															if ( true  ) {
																break '_again;
																
															}
														}}
													
												}
												
												_ => {}
											}
										}
									}
									
								}
								15  => {
									{{act = 7;
										}}
									
								}
								16  => {
									{{act = 8;
										}}
									
								}
								17  => {
									{{act = 9;
										}}
									
								}
								18  => {
									{{act = 10;
										}}
									
								}
								19  => {
									{{act = 11;
										}}
									
								}
								20  => {
									{{act = 12;
										}}
									
								}
								21  => {
									{{act = 13;
										}}
									
								}
								22  => {
									{{act = 14;
										}}
									
								}
								23  => {
									{{act = 15;
										}}
									
								}
								24  => {
									{{act = 16;
										}}
									
								}
								25  => {
									{{act = 17;
										}}
									
								}
								26  => {
									{{act = 18;
										}}
									
								}
								27  => {
									{{act = 19;
										}}
									
								}
								28  => {
									{{act = 20;
										}}
									
								}
								29  => {
									{{act = 21;
										}}
									
								}
								30  => {
									{{act = 22;
										}}
									
								}
								31  => {
									{{act = 23;
										}}
									
								}
								32  => {
									{{act = 24;
										}}
									
								}
								33  => {
									{{act = 25;
										}}
									
								}
								34  => {
									{{act = 26;
										}}
									
								}
								35  => {
									{{act = 55;
										}}
									
								}
								36  => {
									{{te = p+1;
											{tok = TokenType::Comment; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								37  => {
									{{te = p+1;
											{tok = TokenType::Time; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								38  => {
									{{te = p+1;
											{tok = TokenType::String; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								39  => {
									{{te = p+1;
											{tok = TokenType::Add; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								40  => {
									{{te = p+1;
											{tok = TokenType::Sub; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								41  => {
									{{te = p+1;
											{tok = TokenType::Mul; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								42  => {
									{{te = p+1;
											{tok = TokenType::Mod; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								43  => {
									{{te = p+1;
											{tok = TokenType::Pow; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								44  => {
									{{te = p+1;
											{tok = TokenType::Eq; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								45  => {
									{{te = p+1;
											{tok = TokenType::Lte; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								46  => {
									{{te = p+1;
											{tok = TokenType::Gte; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								47  => {
									{{te = p+1;
											{tok = TokenType::Neq; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								48  => {
									{{te = p+1;
											{tok = TokenType::RegexEq; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								49  => {
									{{te = p+1;
											{tok = TokenType::RegexNeq; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								50  => {
									{{te = p+1;
											{tok = TokenType::Arrow; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								51  => {
									{{te = p+1;
											{tok = TokenType::PipeReceive; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								52  => {
									{{te = p+1;
											{tok = TokenType::LParen; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								53  => {
									{{te = p+1;
											{tok = TokenType::RParen; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								54  => {
									{{te = p+1;
											{tok = TokenType::LBrack; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								55  => {
									{{te = p+1;
											{tok = TokenType::RBrack; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								56  => {
									{{te = p+1;
											{tok = TokenType::LBrace; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								57  => {
									{{te = p+1;
											{tok = TokenType::RBrace; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								58  => {
									{{te = p+1;
											{tok = TokenType::Colon; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								59  => {
									{{te = p+1;
											{tok = TokenType::PipeForward; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								60  => {
									{{te = p+1;
											{tok = TokenType::Comma; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								61  => {
									{{te = p+1;
											{tok = TokenType::QuestionMark; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								62  => {
									{{te = p+1;
											{last_newline_before_token = *last_newline;
												cur_line_token_start = *cur_line;
											}
										}}
									
								}
								63  => {
									{{te = p;
											p = p - 1;
											{if *cur_line == 1 && ts == 0 {tok = TokenType::Comment; }; {p += 1;
													break '_resume;
												}}
										}}
									
								}
								64  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Comment; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								65  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Test; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								66  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Ident; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								67  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Int; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								68  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Duration; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								69  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Time; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								70  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Div; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								71  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Lt; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								72  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Gt; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								73  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Assign; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								74  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Quote; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								75  => {
									{{te = p;
											p = p - 1;
										}}
									
								}
								76  => {
									{{p = ((te))-1;
											{tok = TokenType::Int; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								77  => {
									{{p = ((te))-1;
											{tok = TokenType::Duration; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								78  => {
									{{p = ((te))-1;
											{tok = TokenType::Time; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								79  => {
									{{p = ((te))-1;
											{tok = TokenType::Quote; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								80  => {
									{{match ( act  ) {
												0  => {
													{{cs = 0;
															if ( true  ) {
																break '_again;
																
															}
														}}
													
												}
												7  => {
													p = ((te))-1;
													{tok = TokenType::And; {p += 1;
															break '_resume;
														} }
													
												}
												8  => {
													p = ((te))-1;
													{tok = TokenType::Or; {p += 1;
															break '_resume;
														} }
													
												}
												9  => {
													p = ((te))-1;
													{tok = TokenType::Not; {p += 1;
															break '_resume;
														} }
													
												}
												10  => {
													p = ((te))-1;
													{tok = TokenType::Empty; {p += 1;
															break '_resume;
														} }
													
												}
												11  => {
													p = ((te))-1;
													{tok = TokenType::In; {p += 1;
															break '_resume;
														} }
													
												}
												12  => {
													p = ((te))-1;
													{tok = TokenType::Import; {p += 1;
															break '_resume;
														} }
													
												}
												13  => {
													p = ((te))-1;
													{tok = TokenType::Package; {p += 1;
															break '_resume;
														} }
													
												}
												14  => {
													p = ((te))-1;
													{tok = TokenType::Return; {p += 1;
															break '_resume;
														} }
													
												}
												15  => {
													p = ((te))-1;
													{tok = TokenType::Option; {p += 1;
															break '_resume;
														} }
													
												}
												16  => {
													p = ((te))-1;
													{tok = TokenType::Builtin; {p += 1;
															break '_resume;
														} }
													
												}
												17  => {
													p = ((te))-1;
													{tok = TokenType::TestCase; {p += 1;
															break '_resume;
														} }
													
												}
												18  => {
													p = ((te))-1;
													{tok = TokenType::Test; {p += 1;
															break '_resume;
														} }
													
												}
												19  => {
													p = ((te))-1;
													{tok = TokenType::If; {p += 1;
															break '_resume;
														} }
													
												}
												20  => {
													p = ((te))-1;
													{tok = TokenType::Then; {p += 1;
															break '_resume;
														} }
													
												}
												21  => {
													p = ((te))-1;
													{tok = TokenType::Else; {p += 1;
															break '_resume;
														} }
													
												}
												22  => {
													p = ((te))-1;
													{tok = TokenType::Exists; {p += 1;
															break '_resume;
														} }
													
												}
												23  => {
													p = ((te))-1;
													{tok = TokenType::Ident; {p += 1;
															break '_resume;
														} }
													
												}
												24  => {
													p = ((te))-1;
													{tok = TokenType::Int; {p += 1;
															break '_resume;
														} }
													
												}
												25  => {
													p = ((te))-1;
													{tok = TokenType::Float; {p += 1;
															break '_resume;
														} }
													
												}
												26  => {
													p = ((te))-1;
													{tok = TokenType::Duration; {p += 1;
															break '_resume;
														} }
													
												}
												55  => {
													p = ((te))-1;
													{tok = TokenType::Dot; {p += 1;
															break '_resume;
														} }
													
												}
												
												_ => {}
											}
										}
									}
									
								}
								81  => {
									{{act = 62;
										}}
									
								}
								82  => {
									{{te = p+1;
											{tok = TokenType::StringExpr; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								83  => {
									{{te = p+1;
											{tok = TokenType::Quote; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								84  => {
									{{te = p;
											p = p - 1;
											{tok = TokenType::Text; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								85  => {
									{{p = ((te))-1;
											{tok = TokenType::Text; {p += 1;
													break '_resume;
												} }
										}}
									
								}
								86  => {
									{{match ( act  ) {
												0  => {
													{{cs = 0;
															if ( true  ) {
																break '_again;
																
															}
														}}
													
												}
												62  => {
													p = ((te))-1;
													{tok = TokenType::Text; {p += 1;
															break '_resume;
														} }
													
												}
												
												_ => {}
											}
										}
									}
									
								}
								
								_ => {}
							}
							_nacts -= 1;
							_acts += 1;
							
						}
					}
					
				}
				break '_again;
				
			}
			if ( p == eof  ) {
				{
					if ( cs >= 235  ) {
						break '_resume;
						
					}
				}
				
			}
			else {
				{
					_acts = ( _flux_to_state_actions[(cs) as usize] ) as i32;
					_nacts = ( _flux_actions[(_acts ) as usize]
					) as u32;
					_acts += 1;
					while ( _nacts > 0  ) {
						match ( _flux_actions[(_acts ) as usize]
						) {
							1  => {
								{{ts = 0;
									}}
								
							}
							2  => {
								{{act = 0;
									}}
								
							}
							
							_ => {}
						}
						_nacts -= 1;
						_acts += 1;
						
					}
					if ( cs != 0  ) {
						{
							p += 1;
							continue '_resume;
						}
						
					}
				}
				
			}
			break '_resume;
			
		}
	}
	*token = tok;
	
	*token_start = ts - _data;
	*token_start_line = cur_line_token_start;
	*token_start_col = ts - last_newline_before_token + 1;
	
	*token_end = te - _data;
	
	if (*last_newline > te) {
		// te (the token end pointer) will only be less than last_newline
		// (pointer to the last newline the scanner saw) if we are trying
		// to find a multi-line token (either string or regex literal)
		// but don't find the closing `/` or `"`.
		// In that case we need to reset last_newline and cur_line.
		*cur_line = cur_line_token_start;
		*last_newline = last_newline_before_token;
	}
	
	*token_end_line = *cur_line;
	*token_end_col = te - *last_newline + 1;
	
	*pp = p;
	if cs == flux_error {
		return 1
	} else {
		return 0;
	}
}
